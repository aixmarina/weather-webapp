{"version":3,"sources":["js/images.js","js/app.js"],"names":["msg","document","querySelector","form","list","listItems","querySelectorAll","listItemsArray","Array","from","url","addEventListener","e","preventDefault","inputVal","target","city","value","getWeather","textContent","reset","query","fetch","response","json","data","console","log","main","name","weather","logo","images","li","createElement","classList","add","markup","Math","round","temp","innerHTML","appendChild"],"mappings":";;;ACAA;;;;;;;;+CACA;;;;;;AACA,IAAMA,GAAG,GAAGC,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAZ;AACA,IAAMC,IAAI,GAAGF,QAAQ,CAACC,aAAT,CAAuB,kBAAvB,CAAb;AACA,IAAME,IAAI,GAAGH,QAAQ,CAACC,aAAT,CAAuB,WAAvB,CAAb;AACA,IAAMG,SAAS,GAAGJ,QAAQ,CAACK,gBAAT,CAA0B,qBAA1B,CAAlB;AACA,IAAMC,cAAc,GAAGC,KAAK,CAACC,IAAN,CAAWJ,SAAX,CAAvB;AACA,IAAMK,GAAG,sGAAT;AAEAP,IAAI,CAACQ,gBAAL,CAAsB,QAAtB,EAAgC,UAAAC,CAAC,EAAI;EACjCA,CAAC,CAACC,cAAF,GADiC,CACb;;EACpB,IAAMC,QAAQ,GAAGF,CAAC,CAACG,MAAF,CAASC,IAAT,CAAcC,KAA/B,CAFiC,CAEK;;EACtCC,UAAU,CAACJ,QAAD,CAAV;EACAd,GAAG,CAACmB,WAAJ,GAAkB,EAAlB;EACAhB,IAAI,CAACiB,KAAL;AACH,CAND;;SAQeF;;EAmCf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;2EA1DA,iBAA0BF,IAA1B;IAAA;;IAAA;MAAA;QAAA;UAAA;YACUK,KADV,aACqBX,GADrB,gBAC8BM,IAD9B,oBAEI;;YAFJ;YAAA;YAAA,OAK+BM,KAAK,CAACD,KAAD,CALpC;;UAAA;YAKcE,QALd;YAAA;YAAA,OAMqBA,QAAQ,CAACC,IAAT,EANrB;;UAAA;YAMQC,IANR;YAOQC,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAAkB,MAAlB;YAPR,QAQwCA,IARxC,EAQgBG,IARhB,SAQgBA,IARhB,EAQsBC,IARtB,SAQsBA,IARtB,EAQ4BC,OAR5B,SAQ4BA,OAR5B,EAQ6C;YACrC;;YACMC,IAVd,aAUwBC,MAAM,eAAQF,OAAO,CAAC,CAAD,CAAP,CAAW,MAAX,CAAR,EAV9B;YAWcG,EAXd,GAWmBhC,QAAQ,CAACiC,aAAT,CAAuB,IAAvB,CAXnB;YAYQD,EAAE,CAACE,SAAH,CAAaC,GAAb,CAAiB,MAAjB;YACMC,MAbd,sGAe+CR,IAf/C,oCAgBoBA,IAhBpB,sHAmBsCS,IAAI,CAACC,KAAL,CAAWX,IAAI,CAACY,IAAhB,CAnBtC,qGAqByCT,IArBzC,kBAqBqDD,OAAO,CAAC,CAAD,CAAP,CAAW,MAAX,CArBrD,mFAwB0BA,OAAO,CAAC,CAAD,CAAP,CAAW,aAAX,CAxB1B;YA0BQG,EAAE,CAACQ,SAAH,GAAeJ,MAAf;YACAjC,IAAI,CAACsC,WAAL,CAAiBT,EAAjB;YA3BR;YAAA;;UAAA;YAAA;YAAA;YA8BQP,OAAO,CAACC,GAAR;YACA3B,GAAG,CAACmB,WAAJ,GAAkB,mCAAlB;;UA/BR;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA;;;;;;;;ADjBA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA","file":"app.c3f9f951.js","sourceRoot":"..","sourcesContent":["import icon01d from '../assets/svg/01d.svg';\nimport icon01n from '../assets/svg/01n.svg';\nimport icon02d from '../assets/svg/02d.svg';\nimport icon02n from '../assets/svg/02n.svg';\nimport icon03d from '../assets/svg/03d.svg';\nimport icon03n from '../assets/svg/03n.svg';\nimport icon04d from '../assets/svg/04d.svg';\nimport icon04n from '../assets/svg/04n.svg';\nimport icon09d from '../assets/svg/09d.svg';\nimport icon09n from '../assets/svg/09n.svg';\nimport icon10d from '../assets/svg/10d.svg';\nimport icon10n from '../assets/svg/10n.svg';\nimport icon11d from '../assets/svg/11d.svg';\nimport icon11n from '../assets/svg/11n.svg';\nimport icon13d from '../assets/svg/13d.svg';\nimport icon13n from '../assets/svg/13n.svg';\nimport icon50d from '../assets/svg/50d.svg';\nimport icon50n from '../assets/svg/50n.svg';\n\nexport {\n    icon01d,\n    icon01n,\n    icon02d,\n    icon02n,\n    icon03d,\n    icon03n,\n    icon04d,\n    icon04n,\n    icon09d,\n    icon09n,\n    icon10d,\n    icon10n,\n    icon11d,\n    icon11n,\n    icon13d,\n    icon13n,\n    icon50d,\n    icon50n,\n};","import * as images from './images.js'\n\nconst msg = document.querySelector(\".msg\")\nconst form = document.querySelector(\".search-bar form\");\nconst list = document.querySelector(\"ul.cities\")\nconst listItems = document.querySelectorAll(\".ajax-section .city\")\nconst listItemsArray = Array.from(listItems)\nconst url = `https://api.openweathermap.org/data/2.5/weather?appid=${process.env.API_KEY}`\n\nform.addEventListener(\"submit\", e => {\n    e.preventDefault(); // stop the form from submitting, hence prevent reloading the page\n    const inputVal = e.target.city.value; // grab de the value which is contained in the search field\n    getWeather(inputVal)\n    msg.textContent = \"\";\n    form.reset();\n})\n\nasync function getWeather(city) {\n    const query = `${url}&q=${city}&units=metric`\n    // console.log(\"query\", query)\n    let data\n    try {\n        const response = await fetch(query)\n        data = await response.json()\n        console.log(data, \"data\")\n        const { main, name, weather } = data // data.main, data.name, data.weather\n        // const icon = `./icons/${weather[0][\"icon\"]}.svg`\n        const logo = `${images[`icon${weather[0]['icon']}`]}`\n        const li = document.createElement(\"li\")\n        li.classList.add(\"city\")\n        const markup = `\n            <div class=\"card-city\">\n            <h2 class=\"city-name\" data-name=\"${name}\">\n            <span>${name}</span>\n            </h2>\n            <div class=\"card-info\">\n            <span class=\"city-temp\">${Math.round(main.temp)}<sup>Â°</sup>C</span>\n            <figure>\n            <img class=\"city-icon\" src=${logo} alt=${weather[0][\"main\"]}>\n            </figure>\n            </div>\n            <figcaption>${weather[0][\"description\"]}</figcaption>\n            </div>`\n        li.innerHTML = markup\n        list.appendChild(li)\n\n    } catch (error) {\n        console.log(error)\n        msg.textContent = \"Please search for a valid city :(\"\n    }\n}\n\n// async function checkCity() {\n//     if (listItemsArray.length > 0) {\n//         const filteredArray = listItemsArray.filter(el => {\n//             let content = \"\"\n//             if (inputVal.includes(\",\")) {\n//                 if (inputVal.split(\",\")[1].length > 2) {\n//                     inputVal = inputVal.split(\",\")[0]\n//                     content = el.query(\".city-name span\").textContent.toLowerCase()\n//                 } else {\n//                     content = el.querySelector(\".city-name\").dataset.name.toLowerCase()\n//                 }\n//             } else {\n//                 content = el.query(\".city-name span\").textContent.toLowerCase()\n//             }\n//             return content == inputVal.toLowerCase()\n//         })\n\n//         if (filteredArray.length > 0) {\n//             msg.textContent = `You already know the weather for ${filteredArray[0].querySelector(\".city-name span\").textContent} ...otherwise be more specific by providing the country code as well :)`;\n//             // form.reset();\n//             return;\n//         }\n//     }\n// }\n\n"]}